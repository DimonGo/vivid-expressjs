generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["postgresqlExtensions"]
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // extensions = [postgis]
}

enum AccountRole {
  tenant
  manager
}

enum ThemeName {
  light
}

model Account {
  id         Int         @id @default(autoincrement())
  accountId  String      @unique @default(uuid())
  name       String
  role       AccountRole @default(value: tenant)
  email      String      @unique
  password   String
  isActive   Boolean     @default(true)
  isVerified Boolean     @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id                 Int      @id @default(autoincrement())
  accountId          String   @unique @db.Uuid
  name               String
  email              String   @unique
  profileImage       String?
  subscription       Boolean? @default(false)
  lemonSqueezeApiKey String?
  storeId            String?
  webhookSecret      String?

  Projects          Project[] @relation("OwnedProjects")
  PurchasedProjects Project[] @relation("PurchasedProjects")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id         Int       @id @unique @default(autoincrement())
  projectId  String    @unique @default(uuid())
  title      String
  slides     Json?
  userId     String    @db.Uuid
  outlines   String[]
  isDeleted  Boolean   @default(false)
  isSellable Boolean   @default(false)
  variantId  String?
  thumbnail  String?
  themeName  ThemeName @default(value: light)

  User       User   @relation("OwnedProjects", fields: [userId], references: [accountId])
  Purchasers User[] @relation("PurchasedProjects")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
